// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using TIMS.Inventory.SharedKernel.Entities;

namespace TIMS.Inventory.Infrastructure.Models;

public partial class TIMSContext : DbContext
{
    public TIMSContext(DbContextOptions<TIMSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CardEntry> CardEntry { get; set; }

    public virtual DbSet<CompanyInfo> CompInfo { get; set; }

    public virtual DbSet<OpenQuantity> OpenQuantity { get; set; }

    public virtual DbSet<QuanIt> QuanIt { get; set; }

    public virtual DbSet<RuanIt> RuanIt { get; set; }

    public virtual DbSet<VoucherType> VoucherType { get; set; }

    public virtual DbSet<YearInfo> YearInfo { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CardEntry>(entity =>
        {
            entity.HasKey(e => e.CardId).HasName("PK_CardEntry_1");

            entity.Property(e => e.CardId).HasColumnName("CardID");
            entity.Property(e => e.CardName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Card_Name");
            entity.Property(e => e.SlNo).HasColumnName("SLNO");
        });

        modelBuilder.Entity<CompanyInfo>(entity =>
        {
            entity.HasKey(e => e.Id);

            entity.Property(e => e.BranchId).HasColumnName("BRID");
            entity.Property(e => e.Address)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.BranchName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BRName");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactPerson)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Web)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<OpenQuantity>(entity =>
        {
            entity.HasKey(e => e.SlNo);

            entity.ToTable("open_qty");

            entity.Property(e => e.SlNo).HasColumnName("SLNO");
            entity.Property(e => e.CompanyId).HasColumnName("COMPID");
            entity.Property(e => e.CompanyYearId).HasColumnName("COMPYEARID");
            entity.Property(e => e.ItemId).HasColumnName("ITEMID");
            entity.Property(e => e.OpenQuantity1).HasColumnName("OPENQTY");
            entity.Property(e => e.PurchaseRate).HasColumnName("PUR_RATE");
            entity.Property(e => e.ReorderQuantity).HasColumnName("REORDER_QTY");
            entity.Property(e => e.SaleRate).HasColumnName("SALE_RATE");
        });

        modelBuilder.Entity<QuanIt>(entity =>
        {
            entity.HasKey(e => e.QunItId);

            entity.ToTable("QuanIT");

            entity.Property(e => e.QunItName)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RuanIt>(entity =>
        {
            entity.HasKey(e => e.RunItId).HasName("PK__RuanIT__A95D00B74FCF02F2");

            entity.ToTable("RuanIT");

            entity.Property(e => e.RunItName)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VoucherType>(entity =>
        {
            entity.HasKey(e => e.VoucherTypeId);

            entity.Property(e => e.VoucherTypeId).HasColumnName("VoucherTypeId");
            entity.Property(e => e.Abbr)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("abbr");
            entity.Property(e => e.Description)
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<YearInfo>(entity =>
        {
            entity.HasKey(e => e.YearId).HasName("PK__YearInfo__C33A18CD7CF3BB13");

            entity.Property(e => e.Description)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("date");
            entity.Property(e => e.OpeningField)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.StartDate).HasColumnType("date");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
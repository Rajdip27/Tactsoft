@model CasCading_Project.Models.State
@{
    ViewData["Title"] = "Create";
}
<div class=" container">
    <form asp-action="Create" asp-controller="State" method="post">
       
            <div class="col-6">
               
                <label asp-for="CountryId" class="col-md-3 col-form-label"></label>
                <div class="col-md-9">
                <select asp-for="CountryId" class="form-control" asp-items="@(ViewBag.Country)" id="myDropdown">
                    <option value="">--Select Country--</option>
                    </select>
                    <span asp-validation-for="CountryId" class="text-danger"></span>
                </div>
            </div>

            <div class="col-6">
                @Html.LabelFor(m=>m.StateName,new{@class="col-md-3 col-form-label"})
                <div class="col-md-9">
               @* @Html.TextBoxFor(m=>m.StateName, new {@class="form-control",id="textInput"})*@
                <input class="form-control" asp-for="StateName" id="myInput" />
                 <span asp-validation-for="StateName" class="text-danger"></span>
                </div>
            </div>

            <div class="mt-3">
                <input type="submit" class="btn btn-primary" value="Save Data" />
            </div>
    </form>

</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
      
    }
    <script>

        $('#myInput').prop('readonly', true);

        $(document).ready(function () {
            $('#myDropdown').change(function () {
                var selectedValue = $(this).val();
                if (selectedValue === '') {
                    $('#myInput').prop('readonly', true);
                } else {
                    $('#myInput').prop('readonly', false);
                }
            });
        });

    </script>
    
    }

